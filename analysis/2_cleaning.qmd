---
title: "Interoception and Primals"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: true
---

## Data Preparation

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
```


```{r}
#| code-fold: false

df <- read.csv("../data/rawdata_participants.csv")

df$IAS_Total = rowSums(select(df, starts_with("IAS"))) / 21
```

The initial sample consisted of `r report::report_participants(df, age="Age", gender="Gender")`.


## Exclusions

```{r}
outliers <- list()
```

::: {.panel-tabset}

### MAIA

```{r}
make_hist <- function(data, scales="fixed") {
  data |> 
    pivot_longer(cols = everything()) |>
    ggplot(aes(x=value, fill=name)) +
    geom_histogram(bins=30) +
    theme_minimal() +
    scale_fill_viridis_d(guide="none") +
    facet_wrap(~name, scales=scales)
}


select(df, starts_with("MAIA"), -matches("\\d$"), -contains("_R")) |> 
  make_hist() 
```

```{r}
make_correlation <- function(data, data2=NULL) {
  redundant <- TRUE
  if(!is.null(data2)) redundant <- FALSE
  cor <- data |> 
    correlation(data2=data2, method="pearson", redundant=redundant, p_adjust="none") |> 
    correlation::cor_sort() 
  
  if(is.null(data2)) cor <- correlation::cor_lower(cor) 
    
  cor |> 
    mutate(val = paste0(insight::format_value(r), format_p(p, stars_only=TRUE))) |>
    mutate(Parameter2 = fct_rev(Parameter2)) |>
    # mutate(Parameter1 = fct_relabel(Parameter1, \(x) str_remove_all(x, "Feedback_")),
    #        Parameter2 = fct_relabel(Parameter2, \(x) str_remove_all(x, "Feedback_"))) |>
    ggplot(aes(x=Parameter1, y=Parameter2)) +
    geom_tile(aes(fill = r), color = "white") +
    geom_text(aes(label = val), size = 3) +
    labs(title = "Correlation Matrix") +
    scale_fill_gradient2(
      low = "#2196F3",
      mid = "white",
      high = "#F44336",
      breaks = c(-1, 0, 1),
      guide = guide_colourbar(ticks=FALSE),
      midpoint = 0,
      na.value = "grey85",
      limit = c(-1, 1))  + 
    theme_minimal() +
    theme(legend.title = element_blank(),
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.x = element_text(angle = 45, hjust = 1))
} 

select(df, starts_with("MAIA"), -matches("\\d$"), -contains("_R"))  |> 
  make_correlation()
```


### IAS



```{r}
#| code-fold: false

outliers$ias <- df$participant_id[df$IAS_Total < 0.4]

df[df$participant_id %in% outliers$ias, str_detect(names(df), "IAS_")] <- NA
```

```{r}
select(df, starts_with("IAS"), -matches("\\d$"), -contains("_R")) |> 
  make_hist() 
```

### HCT

```{r}
select(df, starts_with("HCT")) |> 
  make_hist() 
```

```{r}
select(df, starts_with("HCT")) |> 
  make_correlation() 
```



### HRV

```{r}
#| code-fold: false

outliers$hrv <- df$participant_id[df$HRV_MeanNN > 1200]
outliers$hrv <- as.character(na.omit(outliers$hrv))

df[df$participant_id %in% outliers$hrv, str_detect(names(df), "HRV")] <- NA
```

```{r}
select(df, starts_with("HRV")) |> 
  make_hist(scales="free") 
```


### PI-99

```{r}
select(df, starts_with("PI")) |> 
  select(-matches("\\d")) |>
  estimate_density() |> 
  ggplot(aes(x=x, y=y, color=Parameter)) +
  geom_line(linewidth=1) +
  theme_minimal()
```

:::

## Correlations


```{r}
#| code-fold: false

make_correlation(
  select(df, starts_with("HCT")),
  select(df, starts_with("MAIA"), starts_with("IAS"), -matches("\\d$"), -contains("_R"))
)

make_correlation(
  select(df, starts_with("HRV")),
  select(df, starts_with("MAIA"), starts_with("IAS"), -matches("\\d$"), -contains("_R"))
)

make_correlation(
  select(df, starts_with("HCT")),
  select(df, starts_with("HRV"))
)

make_correlation(
  select(df, starts_with("IAS"), starts_with("MAIA"), -matches("\\d")),
  select(df, starts_with("PI_"), -matches("\\d"))
)
```

## Final Sample

## Save 

```{r}
#| code-fold: false

write.csv(df, "../data/data_participants.csv", row.names = FALSE)
```

